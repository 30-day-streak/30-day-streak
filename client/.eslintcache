[{"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/index.js":"1","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/reportWebVitals.js":"2","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/App.js":"3","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/auth/SignUp.js":"4","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/auth/Login.js":"5","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/challenges/Challenges.js":"6","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/challenges/CreateChallenge.js":"7","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/challenges/StartChallenge.js":"8","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/challenges/OneChallenge.js":"9","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/ActiveChallengePreview.js":"10","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/ActiveChallengeDetails.js":"11","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/navbar/Navbar.js":"12","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/rewards/CreateReward.js":"13","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/rewards/Rewards.js":"14","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/Dashboard.js":"15","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/modal/Modal.js":"16","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/profile/Profile.js":"17","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/filter/Filter.js":"18","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/rewards/OneReward.js":"19","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/DashboardHome.js":"20","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/DashboardNoActiveChallenges.js":"21","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/services/auth.js":"22","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/TrackerButton.js":"23","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/FullTracker.js":"24"},{"size":676,"mtime":1608258361462,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1607618083223,"results":"27","hashOfConfig":"26"},{"size":5309,"mtime":1608259549276,"results":"28","hashOfConfig":"26"},{"size":3950,"mtime":1608258357932,"results":"29","hashOfConfig":"26"},{"size":3115,"mtime":1608258357678,"results":"30","hashOfConfig":"26"},{"size":3069,"mtime":1608281533102,"results":"31","hashOfConfig":"26"},{"size":6175,"mtime":1609597094999,"results":"32","hashOfConfig":"26"},{"size":5035,"mtime":1609597095203,"results":"33","hashOfConfig":"26"},{"size":2871,"mtime":1608258358402,"results":"34","hashOfConfig":"26"},{"size":8682,"mtime":1608259550057,"results":"35","hashOfConfig":"26"},{"size":2611,"mtime":1609597095280,"results":"36","hashOfConfig":"26"},{"size":1164,"mtime":1608259550453,"results":"37","hashOfConfig":"26"},{"size":5085,"mtime":1608258361452,"results":"38","hashOfConfig":"26"},{"size":2889,"mtime":1608281826060,"results":"39","hashOfConfig":"26"},{"size":2873,"mtime":1608259550061,"results":"40","hashOfConfig":"26"},{"size":6667,"mtime":1608259550165,"results":"41","hashOfConfig":"26"},{"size":5146,"mtime":1608284472030,"results":"42","hashOfConfig":"26"},{"size":1493,"mtime":1608258361438,"results":"43","hashOfConfig":"26"},{"size":2998,"mtime":1608258361455,"results":"44","hashOfConfig":"26"},{"size":3748,"mtime":1608263017862,"results":"45","hashOfConfig":"26"},{"size":1349,"mtime":1608258360187,"results":"46","hashOfConfig":"26"},{"size":647,"mtime":1608258362838,"results":"47","hashOfConfig":"26"},{"size":667,"mtime":1608258360775,"results":"48","hashOfConfig":"26"},{"size":8821,"mtime":1608259550158,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"12on67s",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/index.js",[],["108","109"],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/reportWebVitals.js",[],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/App.js",["110","111","112"],"import './App.css';\nimport React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport SignUp from './components/auth/SignUp';\nimport Login from './components/auth/Login';\nimport Navbar from './components/navbar/Navbar';\nimport Challenges from './components/challenges/Challenges';\nimport CreateChallenge from './components/challenges/CreateChallenge';\nimport StartChallenge from './components/challenges/StartChallenge'\nimport Rewards from './components/rewards/Rewards';\nimport CreateReward from \"./components/rewards/CreateReward\";\nimport Dashboard from './components/dashboard/Dashboard';\nimport Profile from './components/profile/Profile';\nimport Modal from './components/modal/Modal';\n\nclass App extends Component {\n\n  state = {\n    user: this.props.user,\n    modalIsActive: false,\n    modalEvent: \"\",\n    modalReward: {},\n  }\n\n  setUser = user => {\n    this.setState({\n      user: user\n    })\n  }\n\n  modalOff = () => {\n    this.setState({\n      modalIsActive: false,\n      modalEvent: \"\",\n      modalReward: {}\n    })\n  }\n\n  notifyMilestone = (notification) => {\n    console.log(`milestone notified:`, notification);\n\n    const milestone = notification[0];\n    const reward = notification[1];\n    const challengeId = notification[2]\n    const changedToggle = notification[3]\n    console.log({ milestone }, { reward }, { changedToggle })\n    this.setState({\n      modalIsActive: true,\n      modalEvent: milestone,\n      modalReward: reward\n    })\n\n\n    const userChallenges = this.props.user.challenges.map(challenge => {\n      console.log(challenge[changedToggle]);\n\n      //   if (challenge.id == challengeId){\n      //     challenge[changedToggle] = false\n      //   }\n      // })\n      // console.log(userChallenges);\n\n      // const updatedUser = await axios.put(`api/users/${this.state.user._id}`), {\n      //   challenges: this.state.user.challenges,\n      // })\n    });\n    return null;\n  }\n\n\n\n\n\n  // toggleFavoriteReward = (rewardId, favStatus) => {\n  //   console.log(`toggling`, rewardId, favStatus);\n  //   const updatedUser = this.state.user\n  //   if (favStatus) {\n  //     updatedUser.rewards.push(rewardId);\n  //     console.log(`updated user rewards`, updatedUser.rewards);\n  //   } else {\n  //     updatedUser.rewards = updatedUser.rewards.filter(profileRewardId => {\n  //       console.log({ profileRewardId }, { rewardId })\n  //       return profileRewardId !== rewardId\n  //     });\n  //     console.log(`updated user rewards`, updatedUser.rewards);\n  //   }\n  //   this.setState({\n  //     user: updatedUser\n  //   })\n  //   axios.put(`/users/${updatedUser._id}`, {\n  //     challenges: updatedUser.challenges,\n  //     rewards: updatedUser.rewards\n  //   })\n  // }\n\n\n  render() {\n    return (\n      <div className=\"App\" >\n\n        <Navbar user={this.state.user} setUser={this.setUser} />\n\n\n        { this.state.modalIsActive && <div className=\"modal\">\n          <Modal\n            modalIsActive={this.state.modalIsActive}\n            modalOff={this.modalOff}\n            event={this.state.modalEvent}\n            reward={this.state.modalReward}\n          />\n        </div>\n        }\n\n        {/* <Modal\n          modalIsActive={this.state.modalIsActive}\n          event={this.state.modalEvent}\n          reward={this.state.modalReward}\n        /> */}\n\n\n        < Switch >\n          <Route\n            exact\n            path='/signup'\n            render={props => <SignUp setUser={this.setUser} {...props} />}\n          />\n\n          <Route\n            exact\n            path='/login'\n            render={props => <Login setUser={this.setUser} {...props} />}\n          />\n          <Route\n            exact\n            path='/'\n            render={props => <Dashboard\n              notifyMilestone={this.notifyMilestone}\n              setUser={this.setUser}\n              user={this.state.user} {...props} />}\n          />\n          <Route\n            exact\n            path='/challenges'\n            render={props => <Challenges user={this.state.user} setUser={this.setUser} {...props} />}\n          />\n          <Route\n            exact\n            path='/challenges/create'\n            render={props => <CreateChallenge setUser={this.setUser} {...props} user={this.state.user} />}\n          />\n          <Route\n            exact\n            path=\"/rewards/create\"\n            render={props => <CreateReward setUser={this.setUser} {...props} />}\n          />\n          <Route\n            exact\n            path='/rewards'\n            render={props => {\n              if (this.state.user) return (\n                <Rewards\n                  {...props}\n                  user={this.state.user}\n                  setUser={this.setUser}\n                // toggleFavoriteReward={this.toggleFavoriteReward}\n                />)\n              else return (<Redirect to='/' />)\n            }}\n          />\n          <Route\n            exact\n            path='/challenges/:id/start'\n            render={props => <StartChallenge setUser={this.setUser} {...props} user={this.state.user} />}\n          />\n\n          <Route\n            exact\n            path='/profile'\n            render={props => <Profile setUser={this.setUser} {...props} user={this.state.user} />}\n          />\n\n        </Switch >\n\n      </div >\n    );\n  }\n}\n\n\nexport default App;","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/auth/SignUp.js",[],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/auth/Login.js",["113"],"import React, { Component } from 'react';\nimport { login } from '../../services/auth';\nimport './Auth.css';\n\nexport default class SignUp extends Component {\n\n  state = {\n    username: '',\n    password: '',\n    message: ''\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n    login(username, password)\n    .then(data => {\n      if (data.message) {\n        this.setState({ \n          message: data.message,\n          username: '',\n          password: ''\n        });\n      } else {\n        //put the user in the state of App.js\n        this.props.setUser(data);\n        this.props.history.push('/');\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"auth-container\">\n        <div className=\"left\">\n          <div className=\"header\">\n            <h2 className=\"animation a1\">Welcome Back</h2>\n            <h4 className=\"animation a2\">Log in to your account using username and password</h4>\n          </div>\n          <div className=\"form\">\n            <form onSubmit={ this.handleSubmit }>\n              <div className=\"form-field-box\">\n                {/* <label htmlFor=\"username\">Username: </label> */}\n                <input\n                  className=\"form-field animation a3\"\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={ this.state.username }\n                  onChange={ this.handleChange }\n                  placeholder=\"Username\"\n                />\n              </div>\n              <div className=\"form-field-box\">\n                {/* <label htmlFor=\"password\">Password: </label> */}\n                <input\n                  className=\"form-field animation a4\"\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={ this.state.password }\n                  onChange={ this.handleChange }\n                  placeholder=\"Password\"\n                />\n              </div>\n              {this.state.message && (\n                <p>{ this.state.message }</p>\n              )}\n              <br/>\n              <button className=\"button-dark animation a6\"type=\"submit\">Log In</button>\n            </form>\n          </div>\n        </div>\n        <div className=\"right\"></div>\n      </div>\n    )\n  }\n}\n\n   {/* <div class=\"container\">\n        <div class=\"left\">\n          <div class=\"header\">\n            <h2 class=\"animation a1\">Welcome Back</h2>\n            <h4 class=\"animation a2\">Log in to your account using email and password</h4>\n          </div>\n          <div class=\"form\">\n            <input type=\"email\" class=\"form-field animation a3\" placeholder=\"Email Address\"/>\n            <input type=\"password\" class=\"form-field animation a4\" placeholder=\"Password\"/>\n            <p class=\"animation a5\"><a href=\"#\">Forgot Password</a></p>\n            <button class=\"animation a6\">LOGIN</button>\n          </div>\n        </div>\n        <div class=\"right\"></div>\n      </div> */}","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/challenges/Challenges.js",["114"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport Filter from '../filter/Filter.js';\nimport OneChallenge from './OneChallenge';\nimport './Challenges.css';\n\nexport default class Challenges extends Component {\n\n  state = {\n    challenges: [],\n    //filter\n    searchFilter: '',\n    categoryFilter: '',\n    favoritesFilter: false,\n  }\n\n  getChallenges = () => {\n    axios.get('/api/challenges')\n      .then(response => {\n        this.setState({\n          challenges: response.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n  setFilter = (name, value) => {\n    this.setState({ [name]: value })\n  }\n\n  filter = () => {\n    \n    const favoriteIds = this.props.user.challenges.filter(challenge => {\n      return challenge.status === 'favorite'\n    }).map(challenge => challenge.id._id)\n\n    const excludedIds = this.props.user.challenges.filter(challenge => {\n      return challenge.status === 'active' || challenge.status === 'completed' || challenge.status === 'withdrawn'\n    }).map(challenge => challenge.id._id)\n\n    if (this.state.favoritesFilter) {\n      return this.state.challenges.filter(challenge => {\n        return favoriteIds.includes(challenge._id)\n      })\n    } else {\n      return this.state.challenges.filter(challenge => {\n        // search bar filter\n        return `${challenge.title}${challenge.goal}`.toLowerCase().includes(this.state.searchFilter.toLowerCase()) &&\n        // categories filter\n        (this.state.categoryFilter === challenge.category || !this.state.categoryFilter) &&\n        // exclude active, completed and withdrawn challenges\n        !excludedIds.includes(challenge._id)\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.getChallenges();\n  }\n\n  render() {\n\n    const filtered = this.filter();\n\n    const categories = this.state.challenges.map(challenge => { return challenge.category })\n    .filter((category, index, array) => { return array.indexOf(category) === index });\n    \n    return (\n      <div>\n        <div className=\"tool-bar\">\n          <Filter\n            categories={ categories }\n            setFilter={ this.setFilter }\n          />\n          <Link to=\"/challenges/create\"><img src=\"/images/plus.png\" /></Link>\n        </div>\n        <div className=\"challenges-container\">\n          {\n            filtered.map(challenge => {\n              return (\n                <OneChallenge\n                    challenge={ challenge }\n                    user={ this.props.user }\n\n                    getChallenges={ this.getChallenges }\n                    filtered={ filtered }\n                    setUser={this.props.setUser}\n                  \n                />\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/challenges/CreateChallenge.js",["115","116"],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/challenges/StartChallenge.js",[],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/challenges/OneChallenge.js",["117"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './Challenges.css';\n\nexport default class OneChallenge extends Component {\n  state = {\n    users: [],\n    favorite: '',\n  };\n\n  getUsers = () => {\n    axios.get('/api/users')\n      .then(response => {\n        this.setState({\n          users: response.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n  toggleFavorite = async () => {\n    try {\n      const newFavorite = !this.state.favorite;\n      // change state\n      this.setState({ favorite: newFavorite });\n      // update database\n      const challengeID = this.props.challenge._id;\n      const updatedUser = await axios.put(`/api/users/${challengeID}/challengesfavorite`, {\n        favorite: newFavorite,\n      });\n      this.props.setUser(updatedUser.data)\n      // console.log('updated user data after favorite from axios', updatedUser.data);\n      // console.log('state .user.challenges', this.props.user.challenges);\n      //refresh displayed information\n      this.props.getChallenges();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  initialSetUp = () => {\n    //find instead of some?\n    // console.log(this.props.user.challenges)\n    const foundInUserFavorites = this.props.user.challenges.some(\n      (challenge) => {\n        return (\n          challenge.id._id === this.props.challenge._id &&\n          challenge.status === 'favorite'\n        );\n      }\n    );\n\n    this.setState({\n      favorite: foundInUserFavorites,\n    });\n  };\n\n  componentDidMount() {\n    this.initialSetUp();\n    this.getUsers();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.filtered.length !== this.props.filtered.length) {\n      this.initialSetUp();\n    }\n  }\n\n  render() {\n    let participantCounter = 0\n    this.state.users.forEach(user => {\n      user.challenges.forEach(challenge => {\n        if (challenge.id === this.props.challenge._id && \n          (challenge.status === 'completed' || challenge.status === 'active' || challenge.status === 'withdrawn')) {\n          participantCounter++\n        }\n      })\n    })\n\n    return (\n      <div className=\"card\" key={this.props.challenge._id}>\n        <div className=\"card-header\">\n          <span>{this.props.challenge.category}</span>\n          <img\n            src={\n              this.state.favorite\n                ? './images/favorite1.png'\n                : './images/unfavorite1.png'\n            }\n            onClick={this.toggleFavorite}\n            alt=\"favorite\"\n          />\n        </div>\n        <h3>{this.props.challenge.title}</h3>\n        <hr />\n        <p>{this.props.challenge.goal && this.props.challenge.goal}</p>\n        <Link to={`/challenges/${this.props.challenge._id}/start`}>\n          <button className=\"button-light\">Start</button>\n        </Link>\n      </div>\n    );\n  }\n}\n","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/ActiveChallengePreview.js",["118"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport ActiveChallengeDetails from './ActiveChallengeDetails';\nimport TrackerButton from './TrackerButton';\nimport './Dashboard.css';\n\nexport default class ActiveChallengePreview extends Component {\n  state = {\n    challengeDay: 0,\n    activeChallengeDetails: false,\n    user: '',\n  };\n\n  toggleChallengeDetails = () => {\n    this.setState((prevState) => ({\n      activeChallengeDetails: !prevState.activeChallengeDetails,\n    }));\n  };\n\n  selectReward = () => {\n    const rewards = this.props.user.rewards;\n    const chosenRewardIndex = Math.floor(Math.random() * rewards.length);\n    return rewards[chosenRewardIndex];\n  };\n\n  notifier = () => {\n    const today = this.state.challengeDay;\n    const thisProjectsTracker = this.props.challenge.tracker;\n    const streakStatusData = this.props.streakStatus(\n      this.props.challenge.tracker,\n      today\n    );\n    // console.log({ streakStatusData });\n\n    // console.log(`thisProjectTracker ${thisProjectsTracker}, today ${today}`);\n    // console.log({ streakStatusData });\n    // console.log(`tracker today`, thisProjectsTracker[today - 1]);\n    // console.log(`current streak`, streakStatusData.currentStreak);\n    // console.log(`this.props.challenge.subGoals7DayStreak`, this.props.challenge.subGoals7DayStreak);\n\n    //7-day streak\n    if (\n      thisProjectsTracker[today - 1] === 1 &&\n      streakStatusData.currentStreak === 7 &&\n      this.props.challenge.subGoals7DayStreak === false\n    ) {\n      console.log(`7 day streak`);\n      this.props.challenge.subGoals7DayStreak = true;\n      let todaysReward = this.selectReward();\n      return [7, todaysReward];\n      //show notification\n    }\n\n    //half-way\n    if (\n      thisProjectsTracker[today - 1] === 1 &&\n      today >= (15 || 16 || 17) &&\n      this.props.challenge.notification15Days === false\n    ) {\n      console.log(`half way`);\n      this.props.challenge.notification15Days = true;\n      return [7];\n      //show a notification\n    }\n\n    //21-day streak\n    if (\n      thisProjectsTracker[today - 1] === 1 &&\n      streakStatusData.currentStreak === 21 &&\n      this.props.challenge.subGoals21DayStreak === false\n    ) {\n      console.log(`21-day streak`);\n      this.props.challenge.subGoals21DayStreak = true;\n      let todaysReward = this.selectReward();\n      return [21, todaysReward];\n      //select prize\n      //show notification\n    }\n\n    //nearly there\n    if (\n      thisProjectsTracker[today - 1] === 1 &&\n      today === 28 &&\n      this.props.challenge.notification28Days === false\n    ) {\n      console.log(`nearly there`);\n      this.props.challenge.notification15Days = true;\n      return [28];\n      //show notification\n    }\n\n    //completion\n    if (today >= 30 && this.props.challenge.notificationComplete === false) {\n      this.props.challenge.notificationComplete = true;\n      if (streakStatusData.daysCompleted === 30) {\n        return ['success'];\n      } else {\n        return ['notQuite'];\n      }\n    }\n  };\n\n  withdrawFromChallenge = async () => {\n    try {\n      const updatedUser = await axios.put(`/api/users/${this.props.challenge.id._id}/withdraw`)\n      this.props.setUser(updatedUser.data)\n      console.log('updated user data', updatedUser.data);\n      // console.log(this.);\n      this.props.history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleChange = async (event) => {\n    try {\n      const target = event.target;\n      const value = target.checked;\n      const name = target.id;\n      // console.log('target', target, 'value', value, 'name', name);\n      let challengeTracker = this.props.challenge.tracker;\n      console.log('challenge tracker from one button', challengeTracker);\n      let index = target.id;\n      if (event.target.id < this.state.challengeDay) {\n        if (challengeTracker[index] === 0) {\n          challengeTracker[index]++;\n        } else if (challengeTracker[index] === 1) {\n          challengeTracker[index]++;\n        } else {\n          challengeTracker[index]--;\n        }\n        this.setState({\n          [name]: value,\n        });\n        let userId = this.state.user._id;\n        const updatedUser = await axios.put(`/api/users/${userId}`, {\n          challenges: this.state.user.challenges,\n          rewards: this.state.user.rewards,\n        });\n        // const refresh = this.props.refreshActiveChallengeDetails()\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  componentDidMount = async () => {\n    try {\n      const challengeDay = this.props.calculateChallengeDay(\n        this.props.challenge.startDate\n      );\n      // console.log({challengeDay});\n      // console.log('updated user from mount', updatedUser.data);\n      this.setState({\n        challengeDay: challengeDay,\n        user: this.props.user,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // componentDidUpdate(prevProps) {\n  //   console.log('prev props from active challenge preview', prevProps);\n  // }\n\n  render() {\n    // console.log('user challenges at render', this.props.user.challenges);\n    // console.log('challenge props from render', this.props.challenge)\n    const challengeDay = this.state.challengeDay;\n    const todayIndex = challengeDay - 1;\n    // if (!this.props.challenge.id.title) {\n    //   window.location.reload(false);\n    // } else {\n    // console.log('props from preview ');\n    return (\n      <div className=\"active-preview\">\n        <div className=\"active-preview-no-button\">\n          <div className=\"preview-challenge-info\">\n            <h5>{this.props.challenge.id.title}</h5>\n            <p>{this.props.challenge.id.goal}</p>\n            <p>\n              {this.props.challenge.id.dailyTarget.description}\n              {this.props.challenge.id.dailyTarget.number}\n              {this.props.challenge.id.dailyTarget.unit}\n            </p>\n          </div>\n          <div className=\"awesome-button\">\n            <p>\n              Click below to <br /> log today:{' '}\n            </p>\n            <TrackerButton\n              index={todayIndex}\n              user={this.props.user}\n              handleChange={this.handleChange}\n              challenge={this.props.challenge}\n              challengeDay={this.state.challengeDay}\n            />\n          </div>\n        </div>\n        {this.state.activeChallengeDetails && (\n          <ActiveChallengeDetails\n            challenge={this.props.challenge}\n            user={this.props.user}\n            challengeDay={this.state.challengeDay}\n            calculateChallengeDay={this.props.calculateChallengeDay}\n            streakStatus={this.props.streakStatus}\n            notifier={this.notifier}\n          />\n        )}\n        {!this.state.activeChallengeDetails && (\n          <button className=\"button-dark\" onClick={this.toggleChallengeDetails}>\n            show details\n          </button>\n        )}\n        {this.state.activeChallengeDetails && (\n          <button className=\"button-light\" onClick={this.withdrawFromChallenge}>\n            i give up, i'm a bit fat looser\n          </button>\n        )}\n        {this.state.activeChallengeDetails && (\n          <button className=\"button-dark\" onClick={this.toggleChallengeDetails}>\n            hide details\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n// }\n","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/ActiveChallengeDetails.js",[],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/navbar/Navbar.js",[],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/rewards/CreateReward.js",["119","120","121"],"import React, { Component } from 'react'\nimport axios from 'axios';\n\nexport default class CreateReward extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      description: '',\n      category: 'entertainment',\n      url: '',\n      showForm: true\n    }\n    this.initialState = this.state\n  }\n\n  getRewards = () => {\n    axios.get('/api/rewards')\n      .then(response => {\n        this.setState({\n          rewards: response.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n  handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  resetState = () => {\n    this.setState(this.initialState)\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // axios call to api\n    axios\n      .post('/api/rewards', {\n        name: this.state.name,\n        description: this.state.description,\n        category: this.state.category,\n        url: this.state.url\n      })\n      .then((response) => {\n        // reinitialise state\n        this.resetState()\n        this.getRewards()\n        this.props.history.push('/rewards');\n      })\n      .catch(err => console.log(err));\n  }\n\n  toggleAddReward = () => {\n    this.setState((state) => ({\n      showForm: !state.showForm\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.showForm &&\n          <div className=\"create-challenge-page\">\n            <form \n              className=\"create-challenge-form\"\n              onSubmit={this.handleSubmit}>\n\n                <div className=\"create-challenge-header\">\n                  <h1 onClick={this.toggleAddReward}>Create a new reward</h1>\n                  <p>Need some ideas for incentives to achieving your goals?</p>\n                  <p>Check out what <a href=\"#\">other users have added</a> or see if there is something you like on \n                  <a href=\"https://www.developgoodhabits.com/reward-yourself/\" target=\"_blank\"> this list </a>\n                  or <a href=\"https://organisemyhouse.com/reward-yourself/\" target=\"_blank\">this one</a>.</p>\n                </div>\n\n              <div className=\"create-challenge-form-fields\">\n                <div className=\"create-challenge-form-item\">\n\n                  <div className=\"create-challenge-form-item\">\n                    <label htmlFor=\"name\">Name</label>\n                    <br />\n                    <input\n                      type=\"text\"\n                      id=\"name\"\n                      name=\"name\"\n                      value={this.state.name}\n                      placeholder=\"Give your reward a name\"\n                      onChange={this.handleChange}/>\n                  </div>\n\n                  <div className=\"create-challenge-form-item\">\n                    <label htmlFor=\"description\">Description</label>\n                    <br />\n                    <input\n                      type=\"text\"\n                      id=\"description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      placeholder=\"Add a more detailed description if you need one\"\n                      onChange={this.handleChange} />\n                  </div>\n\n                  <div className=\"create-challenge-form-item\">\n                    <label htmlFor=\"url\">Link</label>\n                    <br />\n                    <input\n                      type=\"text\"\n                      id=\"url\"\n                      name=\"url\"\n                      value={this.state.url}\n                      placeholder=\"You can add a link to an internet page here\"\n                      onChange={this.handleChange} />\n                  </div>\n\n                  <div className=\"create-challenge-form-item\">\n                    <label htmlFor=\"category\">Category  &nbsp; &nbsp;</label>\n                    <select\n                      id=\"category\"\n                      name=\"category\"\n                      value={this.state.category}\n                      placeholder=\"Select category\"\n                      onChange={this.handleChange}>\n                      {/* <option value=\"\" selected=\"selected\">Select a category</option> */}\n                      <option value=\"entertainment\">Art and Entertainment</option>\n                      <option value=\"food\">Food</option>\n                      <option value=\"self-care\">Self-care</option>\n                      <option value=\"shopping\">Shopping</option>\n                      <option value=\"travel and outdoors\">Travel and Outdoors</option>\n                      <option value=\"Other\">Other</option>\n                    </select>\n                  </div>\n\n                </div>\n              </div>\n\n\n              <div className=\"create-challenge-buttons\">\n                <button className=\"button-light\" type=\"cancel\" onClick={this.resetState}>Cancel</button>\n                <button className=\"button-dark\" type=\"submit\">Save to favorites</button>\n              </div>\n            </form>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/rewards/Rewards.js",["122","123"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\nimport Filter from '../filter/Filter';\nimport OneReward from './OneReward';\nimport CreateReward from './CreateReward';\nimport '../challenges/Challenges.css';\n\nexport default class Rewards extends Component {\n\n  state = {\n    rewards: [],\n    //filter\n    searchFilter: '',\n    categoryFilter: '',\n    favoritesFilter: false,\n  }\n\n  getRewards = () => {\n    axios.get('/api/rewards')\n      .then(response => {\n        this.setState({\n          rewards: response.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n  setFilter = (name, value) => {\n    this.setState({ [name]: value })\n  }\n\n  filter = () => {\n    const favoriteIds = this.props.user.rewards.map(reward => reward._id)\n\n    if (this.state.favoritesFilter) {\n      console.log('here')\n      console.log('0', this.state.rewards)\n      return this.state.rewards.filter(reward => { \n        console.log('FAV', favoriteIds, 'ID',reward._id, \"?\", favoriteIds.includes(reward._id))\n\n        return favoriteIds.includes(reward._id)\n      })\n    } else {\n      console.log('1', this.state.rewards)\n      return this.state.rewards.filter(reward => { \n        // search bar filter\n        return `${reward.name}${reward.description}`.toLowerCase().includes(this.state.searchFilter.toLowerCase()) &&\n        // categories filter\n        (this.state.categoryFilter === reward.category || !this.state.categoryFilter)\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.getRewards();\n  }\n\n  render() {\n    const filtered = this.filter();\n    console.log('filtered', filtered)\n    console.log('2', this.state.rewards)\n\n\n    const categories = this.state.rewards.map(reward => { return reward.category})\n    .filter((category, index, array) => { return array.indexOf(category) === index })\n\n    return (\n      <div>\n        <div className=\"tool-bar\">\n          <Filter \n            categories={ categories }\n            setFilter={ this.setFilter }\n          />\n          <Link to=\"/rewards/create\"><img src=\"/images/plus.png\" /></Link>\n        </div>\n        \n        {/* <CreateReward {...this.props} forceRewardListUpdate={this.getData}/> */}\n        <div className=\"challenges-container\">\n          { \n            filtered.map(reward => {\n              return (\n                <div key={reward._id}>\n                  <OneReward\n                    reward={ reward }\n                    user={ this.props.user}\n                    filtered={ filtered }\n                    getRewards={ this.getRewards }\n                    setUser={ this.props.setUser }\n                    // toggleFavoriteReward = { this.props.toggleFavoriteReward }\n                  />\n                </div>\n              ) \n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/Dashboard.js",[],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/modal/Modal.js",[],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/profile/Profile.js",[],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/filter/Filter.js",[],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/rewards/OneReward.js",[],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/DashboardHome.js",["124"],"import React from 'react'\n\nexport default function DashboardHome() {\n  return (\n    <div className=\"welcome-container\">\n\n      <div className=\"scroll-container one\" >\n          <h1>30-DAY-CHALLENGE</h1>\n          <h2>Think about something you always wanted to add to your life and try it for the next 30 days...</h2>\n          <h2>30 days just about the right amount of time to add a new habit or substract a habit.</h2>\n          <h2><strong>So... what are you waiting for?</strong></h2>\n      </div>\n\n      {/* WHY do it? > video */}\n      <div className=\"scroll-container two\">\n        <h1>Why do a 30-day challenge?</h1>\n        <iframe \n          width=\"560\" \n          height=\"315\" \n          src=\"https://www.youtube.com/embed/UNP03fDSj1U\"\n          frameborder=\"0\" \n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n          allowfullscreen>\n        </iframe>\n      </div>\n\n      {/* How do get started? */}\n      <div className=\"scroll-container light three\">\n        <h1>How to get started?</h1>\n        <div className=\"how-container\">\n          <div className=\"how-box step-one\">\n            <img src=\"../../images/home2.png\" alt=\"challenges\"/>\n            <div className=\"how-box-text\">\n              <h3>Challenges</h3>\n              <p>30 Day Challenges are a great way of implementing new habits in life, trying \n              new things and undertaking new challenges without putting too much pressure on yourself.\n              Pick a challenge for yourself. If you need inspiration, browse ones that others added or \n              create your own. </p>\n            </div>\n          </div>\n          <div className=\"how-box step-two\">\n            <div className=\"how-box-text\">\n              <h3>Rewards</h3>\n              <p>It’s important to stay motivated, and a great way to do that is through a reward \n              system. You'll get an opportunity to earn rewards, say eating your favorite food, \n              by accomplishing a milestone and get a grand prize form reaching the goal goal. \n              This way you find starting to work on your goals much Easier. Again, you can add \n              one of the rewards from existing collections to your favorites or create your own.</p>\n            </div>\n            <img src=\"\" alt=\"rewards\"/>\n          </div>\n          <div className=\"how-box step-three\">\n            <img src=\"\" alt=\"progress\"/>\n            <div className=\"how-box-text\">\n              <h3>Progress</h3>\n              <p>Track your progress. Checking each day on our virtual calendar encourages you \n              to complete your desired task every single day. The more you look at an growing \n              streak, the more compulsion you feel to get over any initial resistance and \n              motivate yourself to keep going. </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tips on how to make the habits stick */}\n      <div className=\"scroll-container dark four\">\n        <div className=\"tips\">\n          <h1>Tips and tricks </h1>\n          <ul>\n            <li>Focus on 1 habit at the time</li>\n            <li>Commit to a minimum of 30 days</li>\n            <li>Anchor a new habit to an established routine</li>\n            <li>Take baby steps - micro commitments</li>\n            <li>Don’t break the chain. </li>\n            <li>Plan for obstacles and challenges</li>\n            <li>Create accountability for your work habit</li>\n            <li>Reward important milestones</li>\n            <li>Build a new identity</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/DashboardNoActiveChallenges.js",[],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/services/auth.js",[],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/TrackerButton.js",[],"/Users/annawaszak/Ironhack/projects/30-day-streak/client/src/components/dashboard/FullTracker.js",["125","126","127","128"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport TrackerButton from './TrackerButton';\n\nexport default class FullTracker extends Component {\n  state = {\n    user: '',\n  };\n\n  initialSetupTracker = () => {\n    let tracker = this.props.challenge.tracker;\n    for (let i = 0; i < tracker.length; i++) {\n      let indexToString = i.toString();\n      let trackerValue = tracker[i];\n      this.setState({\n        [indexToString]: trackerValue,\n      });\n    }\n  };\n\n  handleChange = async (event) => {\n    try {\n      const target = event.target;\n      const value = target.checked;\n      const name = target.id;\n      // console.log('user tracker array', this.state.user.challenges[0].tracker);\n      let challengeTracker = this.props.challenge.tracker;\n      let index = target.id;\n\n      if (event.target.id < this.props.challengeDay) {\n        if (challengeTracker[index] === 0) {\n          challengeTracker[index]++;\n        } else if (challengeTracker[index] === 1) {\n          challengeTracker[index]++;\n        } else {\n          challengeTracker[index]--;\n        }\n        // console.log('challenge tracker after click', challengeTracker);\n        // console.log('state after click', this.state);\n        this.setState({\n          [name]: value,\n        });\n        let userId = this.state.user._id;\n        const updatedUser = await axios.put(`/api/users/${userId}`, {\n          challenges: this.state.user.challenges,\n          rewards: this.state.user.rewards,\n        });\n        const refresh = this.props.refreshActiveChallengeDetails()\n        const streakStatusData = this.props.streakStatus(this.props.challenge.tracker, this.props.challengeDay)\n        const generateNotifications = this.props.notifier(streakStatusData)\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  componentDidMount = () => {\n\n    this.setState({\n      user: this.props.user,\n    });\n  };\n\n  render() {\n    let challengeTracker = this.props.challenge.tracker;\n    return (\n      <div className=\"full-tracker\">\n        <p>click on a day to update the tracker</p>\n\n        <div className=\"set-of-five-checkboxes\">\n          <TrackerButton\n            index=\"0\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"1\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"2\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"3\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"4\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n        </div>\n\n        <div className=\"set-of-five-checkboxes\">\n          <TrackerButton\n            index=\"5\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"6\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"7\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"8\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"9\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n        </div>\n\n        <div className=\"set-of-five-checkboxes\">\n          <TrackerButton\n            index=\"10\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"11\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"12\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"13\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"14\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n        </div>\n\n        <div className=\"set-of-five-checkboxes\">\n          <TrackerButton\n            index=\"15\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"16\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"17\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"18\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"19\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n        </div>\n\n        <div className=\"set-of-five-checkboxes\">\n          <TrackerButton\n            index=\"20\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"21\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"22\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"23\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"24\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n        </div>\n\n        <div className=\"set-of-five-checkboxes\">\n          <TrackerButton\n            index=\"25\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"26\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"27\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"28\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n          <TrackerButton\n            index=\"29\"\n            user={this.props.user}\n            handleChange={this.handleChange}\n            challenge={this.props.challenge}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":44,"column":11,"nodeType":"135","messageId":"136","endLine":44,"endColumn":22},{"ruleId":"133","severity":1,"message":"137","line":54,"column":11,"nodeType":"135","messageId":"136","endLine":54,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":54,"column":69,"nodeType":"140","messageId":"141","endLine":54,"endColumn":71},{"ruleId":"142","severity":1,"message":"143","line":85,"column":4,"nodeType":"144","messageId":"145","endLine":99,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":76,"column":41,"nodeType":"148","endLine":76,"endColumn":71},{"ruleId":"133","severity":1,"message":"149","line":58,"column":13,"nodeType":"135","messageId":"136","endLine":58,"endColumn":24},{"ruleId":"133","severity":1,"message":"149","line":90,"column":13,"nodeType":"135","messageId":"136","endLine":90,"endColumn":24},{"ruleId":"133","severity":1,"message":"150","line":76,"column":11,"nodeType":"135","messageId":"136","endLine":76,"endColumn":29},{"ruleId":"133","severity":1,"message":"149","line":136,"column":15,"nodeType":"135","messageId":"136","endLine":136,"endColumn":26},{"ruleId":"151","severity":1,"message":"152","line":76,"column":37,"nodeType":"148","endLine":76,"endColumn":49},{"ruleId":"153","severity":1,"message":"154","line":77,"column":80,"nodeType":"155","endLine":77,"endColumn":95},{"ruleId":"153","severity":1,"message":"154","line":78,"column":77,"nodeType":"155","endLine":78,"endColumn":92},{"ruleId":"133","severity":1,"message":"156","line":6,"column":8,"nodeType":"135","messageId":"136","endLine":6,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":75,"column":38,"nodeType":"148","endLine":75,"endColumn":68},{"ruleId":"157","severity":1,"message":"158","line":17,"column":9,"nodeType":"148","endLine":23,"endColumn":27},{"ruleId":"133","severity":1,"message":"149","line":45,"column":15,"nodeType":"135","messageId":"136","endLine":45,"endColumn":26},{"ruleId":"133","severity":1,"message":"159","line":49,"column":15,"nodeType":"135","messageId":"136","endLine":49,"endColumn":22},{"ruleId":"133","severity":1,"message":"160","line":51,"column":15,"nodeType":"135","messageId":"136","endLine":51,"endColumn":36},{"ruleId":"133","severity":1,"message":"161","line":66,"column":9,"nodeType":"135","messageId":"136","endLine":66,"endColumn":25},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'challengeId' is assigned a value but never used.","Identifier","unusedVar","'userChallenges' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'updatedUser' is assigned a value but never used.","'participantCounter' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'CreateReward' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'refresh' is assigned a value but never used.","'generateNotifications' is assigned a value but never used.","'challengeTracker' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]