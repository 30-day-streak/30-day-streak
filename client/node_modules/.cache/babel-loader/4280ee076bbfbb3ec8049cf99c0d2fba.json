{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/markkeeble/Ironhack/course/30-day-streak/client/src/components/OneReward.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './challenges/Challenges.css';\nexport default class OneReward extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorite: ''\n    };\n\n    this.toggleFavorite = () => {\n      const newFavorite = !this.state.favorite; // 1. via Apps.js\n      // this.props.toggleFavoriteReward(this.props.reward._id, newFavorite);\n      // 2. the way it's done with challenges / different route\n\n      const rewardID = this.props.reward._id;\n      axios.put(`/api/users/${rewardID}/rewardsfavorite`, {\n        favorite: newFavorite\n      }); // 3. toggleFavoriteReward but moved from App.js\n      // const updatedUser = this.props.user;\n      // console.log('newFavorite', newFavorite)\n      // console.log('user', updatedUser.rewards)\n      // if (newFavorite) updatedUser.rewards.push(this.props.reward._id);\n      // else {\n      //   updatedUser.rewards = updatedUser.rewards.filter(profileRewardId => {\n      //     console.log(profileRewardId._id, this.props.reward._id, profileRewardId._id !== this.props.reward._id)\n      //     return profileRewardId._id !== this.props.reward._id\n      //   });\n      //   console.log('updated user', updatedUser.rewards)\n      //   // updatedUser.rewards.pop(this.props.reward._id);\n      // }\n      // this.props.setUser(updatedUser);\n      // axios.put(`/users/${updatedUser._id}`, {\n      //   rewards: updatedUser.rewards\n      // })\n      //update state\n\n      this.setState({\n        favorite: newFavorite\n      }); // refresh data\n\n      this.props.getData();\n    };\n\n    this.initialSetUp = () => {\n      const foundInUserFavorites = this.props.user.rewards.some(reward => {\n        return reward._id === this.props.reward._id;\n      });\n      this.setState({\n        favorite: foundInUserFavorites\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.initialSetUp();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.filtered.length !== this.props.filtered.length) {\n      this.initialSetUp();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.reward.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.favorite ? '/images/favorite.png' : '/images/unfavorite.png',\n          onClick: this.toggleFavorite,\n          alt: \"favorite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.props.reward.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.props.reward.description && this.props.reward.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), this.props.reward.url && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"{this.props.reward.url}\",\n        children: \"Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 36\n      }, this)]\n    }, this.props.reward._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/markkeeble/Ironhack/course/30-day-streak/client/src/components/OneReward.js"],"names":["React","Component","axios","OneReward","state","favorite","toggleFavorite","newFavorite","rewardID","props","reward","_id","put","setState","getData","initialSetUp","foundInUserFavorites","user","rewards","some","componentDidMount","componentDidUpdate","prevProps","prevState","filtered","length","render","category","name","description","url"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;AAEA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE/CG,KAF+C,GAEvC;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAFuC;;AAAA,SAM/CC,cAN+C,GAM9B,MAAM;AACrB,YAAMC,WAAW,GAAG,CAAC,KAAKH,KAAL,CAAWC,QAAhC,CADqB,CAGrB;AACA;AAEA;;AACA,YAAMG,QAAQ,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAnC;AACAT,MAAAA,KAAK,CAACU,GAAN,CAAW,cAAaJ,QAAS,kBAAjC,EAAoD;AAClDH,QAAAA,QAAQ,EAAEE;AADwC,OAApD,EARqB,CAYrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,WAAKM,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAEE;AAAZ,OAAd,EA/BqB,CAiCrB;;AACA,WAAKE,KAAL,CAAWK,OAAX;AACD,KAzC8C;;AAAA,SA2C/CC,YA3C+C,GA2ChC,MAAM;AACnB,YAAMC,oBAAoB,GAAG,KAAKP,KAAL,CAAWQ,IAAX,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BT,MAAM,IAAI;AAClE,eAAOA,MAAM,CAACC,GAAP,KAAe,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,GAAxC;AACD,OAF4B,CAA7B;AAIA,WAAKE,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAEW;AADE,OAAd;AAGD,KAnD8C;AAAA;;AAqD/CI,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,YAAL;AACD;;AAEDM,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAID,SAAS,CAACE,QAAV,CAAmBC,MAAnB,KAA8B,KAAKhB,KAAL,CAAWe,QAAX,CAAoBC,MAAtD,EAA8D;AAC5D,WAAKV,YAAL;AACD;AACF;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAA,oBAAK,KAAKjB,KAAL,CAAWC,MAAX,CAAkBiB;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,GAAG,EAAG,KAAKvB,KAAL,CAAWC,QAAX,GAAsB,sBAAtB,GAA+C,wBAA1D;AAAoF,UAAA,OAAO,EAAE,KAAKC,cAAlG;AAAkH,UAAA,GAAG,EAAC;AAAtH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBAAM,KAAKG,KAAL,CAAWC,MAAX,CAAkBkB;AAAxB;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA,kBAAK,KAAKnB,KAAL,CAAWC,MAAX,CAAkBmB,WAAlB,IAAiC,KAAKpB,KAAL,CAAWC,MAAX,CAAkBmB;AAAxD;AAAA;AAAA;AAAA;AAAA,cAPF,EASI,KAAKpB,KAAL,CAAWC,MAAX,CAAkBoB,GAAlB,iBAAyB;AAAG,QAAA,IAAI,EAAC,yBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAT7B;AAAA,OAA2B,KAAKrB,KAAL,CAAWC,MAAX,CAAkBC,GAA7C;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA7E8C","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './challenges/Challenges.css';\n\nexport default class OneReward extends Component {\n\n  state = {\n    favorite: '',\n  };\n\n  toggleFavorite = () => {\n    const newFavorite = !this.state.favorite\n\n    // 1. via Apps.js\n    // this.props.toggleFavoriteReward(this.props.reward._id, newFavorite);\n\n    // 2. the way it's done with challenges / different route\n    const rewardID = this.props.reward._id;\n    axios.put(`/api/users/${rewardID}/rewardsfavorite`, {\n      favorite: newFavorite,\n    })\n\n    // 3. toggleFavoriteReward but moved from App.js\n    // const updatedUser = this.props.user;\n    // console.log('newFavorite', newFavorite)\n    // console.log('user', updatedUser.rewards)\n    // if (newFavorite) updatedUser.rewards.push(this.props.reward._id);\n    // else {\n    //   updatedUser.rewards = updatedUser.rewards.filter(profileRewardId => {\n    //     console.log(profileRewardId._id, this.props.reward._id, profileRewardId._id !== this.props.reward._id)\n    //     return profileRewardId._id !== this.props.reward._id\n    //   });\n    //   console.log('updated user', updatedUser.rewards)\n    //   // updatedUser.rewards.pop(this.props.reward._id);\n    // }\n    // this.props.setUser(updatedUser);\n    // axios.put(`/users/${updatedUser._id}`, {\n    //   rewards: updatedUser.rewards\n    // })\n\n    //update state\n    this.setState({ favorite: newFavorite });\n    \n    // refresh data\n    this.props.getData()\n  }\n\n  initialSetUp = () => {\n    const foundInUserFavorites = this.props.user.rewards.some(reward => {\n      return reward._id === this.props.reward._id;\n    })\n\n    this.setState({\n      favorite: foundInUserFavorites\n    })\n  }\n\n  componentDidMount() {\n    this.initialSetUp();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.filtered.length !== this.props.filtered.length) {\n      this.initialSetUp()\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"card\" key={this.props.reward._id}>\n        <div className=\"card-header\">\n          <p>{ this.props.reward.category }</p>\n          <img src={ this.state.favorite ? '/images/favorite.png' : '/images/unfavorite.png'} onClick={this.toggleFavorite} alt=\"favorite\" />\n        </div>\n        <h3>{ this.props.reward.name }</h3>\n        <hr/>\n        <p>{ this.props.reward.description && this.props.reward.description }</p>\n  \n        { this.props.reward.url && <a href=\"{this.props.reward.url}\">Link</a>}\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}