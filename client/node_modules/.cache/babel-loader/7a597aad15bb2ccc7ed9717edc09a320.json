{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/markkeeble/Ironhack/course/30-day-streak/client/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from 'react'; // import axios from 'axios';\n\nimport './Dashboard.css';\nimport { Link } from 'react-router-dom';\nimport ActiveChallengePreview from './ActiveChallengePreview';\nimport ActiveChallengeDetails from './ActiveChallengeDetails';\nimport axios from 'axios';\nexport default class Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: '',\n      reload: true\n    };\n\n    this.calculateChallengeDay = created_at => {\n      const start = Math.floor([created_at] / 86400000);\n      const today = Math.ceil(new Date() / 86400000);\n      console.log({\n        start\n      });\n      console.log({\n        today\n      });\n      const trackingDay = today - start;\n      return trackingDay;\n    };\n\n    this.streakStatus = (arr, days) => {\n      console.log(arr.length);\n      let s = arr[0].toString();\n\n      for (let i = 1; i < days; i++) {\n        if (arr[i] !== arr[i - 1]) s += \" \";\n        s += arr[i];\n      } // calculate total days successfully completed\n\n\n      const completed = s.split('1').length - 1; //split data into streaks\n\n      let streaks = s.split(\" \");\n      streaks = streaks.filter(streak => streak[0] === \"1\"); //find longest streak\n\n      let longest = 0;\n      streaks.forEach(streak => {\n        let streakLength = streak.length;\n        if (streakLength > longest) longest = streakLength;\n      }); //compile return array\n\n      let output = {\n        currentStreak: 0,\n        longestStreak: longest,\n        daysCompleted: completed\n      };\n\n      if (arr[days - 1] === 1) {\n        output.currentStreak = streaks[streaks.length - 1].length;\n      }\n\n      return output;\n    };\n\n    this.componentDidMount = async () => {\n      console.log('user id?', this.props.user._id); // try {\n      //   let loggedinUser = await axios.get('/users/')\n      //   return loggedinUser\n      // } catch (error) {\n      //   console.log(error);\n      // }\n    };\n  }\n\n  render() {\n    if (this.props.user) {\n      const activeChallenges = this.props.user.challenges.filter(challenge => challenge.status === 'active'); // users with no active challenges\n\n      const userHasActiveChallenges = this.props.user.challenges.some(challenge => challenge.status === 'active');\n\n      if (!userHasActiveChallenges) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instruction-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Welcome\", ' ', this.props.user.name ? this.props.user.name : this.props.user.username, \"!\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: \"/challenges\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"BROWSE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 15\n              }, this), ' ', \"the existing challenges, or\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/challenges/create\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"CREATE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 15\n              }, this), ' ', \"your own. You can 'like' your favorite challenges and come back to them late when you're ready to start a challenge.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: \"/rewards\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"BROWSE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 15\n              }, this), ' ', \"the existing rewards or\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/rewards/create\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"CREATE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 15\n              }, this), ' ', \"your own motivate you. You get rewards when reaching a certain milestones. If you 'like' the ones that you favor, the reward will be generated amongst them.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Let the streak begin!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this); // users with active challenges\n      } else {\n        // this.reload()\n        // console.log('user from props', this.props.user);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Welcome\", ' ', this.props.user.name ? this.props.user.name : this.props.user.username, \"!\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your Active Challenges:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-container\",\n            children: activeChallenges.map(challenge => {\n              return /*#__PURE__*/_jsxDEV(ActiveChallengePreview, {\n                challenge: challenge,\n                user: this.props.user,\n                calculateChallengeDay: this.calculateChallengeDay,\n                streakStatus: this.streakStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true); // builing the view for the logged in users here now\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Think about something you always wanted to add to your life and try it for the next 30 days. 30 days just about the right amount of time to add a new habit or substract a habit. If you really want something badly enough, you can do ANYTHING for 30 days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/markkeeble/Ironhack/course/30-day-streak/client/src/components/dashboard/Dashboard.js"],"names":["React","Component","Link","ActiveChallengePreview","ActiveChallengeDetails","axios","Dashboard","state","user","reload","calculateChallengeDay","created_at","start","Math","floor","today","ceil","Date","console","log","trackingDay","streakStatus","arr","days","length","s","toString","i","completed","split","streaks","filter","streak","longest","forEach","streakLength","output","currentStreak","longestStreak","daysCompleted","componentDidMount","props","_id","render","activeChallenges","challenges","challenge","status","userHasActiveChallenges","some","name","username","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import axios from 'axios';\nimport './Dashboard.css';\nimport { Link } from 'react-router-dom';\nimport ActiveChallengePreview from './ActiveChallengePreview';\nimport ActiveChallengeDetails from './ActiveChallengeDetails';\nimport axios from 'axios';\n\nexport default class Dashboard extends Component {\n  state = {\n    user: '',\n    reload: true,\n  };\n\n  calculateChallengeDay = (created_at) => {\n    const start = Math.floor([created_at] / 86400000)\n    const today = Math.ceil(new Date() / 86400000)\n    console.log({start});\n    console.log({today});\n    \n    \n    const trackingDay = today - start\n    return trackingDay\n  }\n\n  streakStatus = (arr, days) => {\n    console.log(arr.length);\n    let s = arr[0].toString();\n    for (let i = 1; i < days; i++) {\n      if (arr[i] !== arr[i - 1]) s += \" \";\n      s += arr[i];\n    }\n\n    // calculate total days successfully completed\n    const completed = s.split('1').length - 1\n\n    //split data into streaks\n    let streaks = s.split(\" \")\n    streaks = streaks.filter(streak => streak[0] === \"1\")\n    //find longest streak\n    let longest = 0\n    streaks.forEach(streak => {\n      let streakLength = streak.length;\n      if (streakLength > longest) longest = streakLength;\n    })\n    //compile return array\n    let output = {\n      currentStreak: 0,\n      longestStreak: longest,\n      daysCompleted: completed\n    }\n    if (arr[days - 1] === 1) {\n      output.currentStreak = streaks[streaks.length - 1].length\n    }\n    return output\n  }\n\ncomponentDidMount = async () => {\n  console.log('user id?', this.props.user._id);\n  // try {\n  //   let loggedinUser = await axios.get('/users/')\n  //   return loggedinUser\n  // } catch (error) {\n  //   console.log(error);\n  // }\n};\n\nrender() {\n  if (this.props.user) {\n    const activeChallenges = this.props.user.challenges.filter(challenge => challenge.status === 'active')\n    // users with no active challenges\n    const userHasActiveChallenges = this.props.user.challenges.some(\n      (challenge) => challenge.status === 'active'\n    );\n\n    if (!userHasActiveChallenges) {\n      return (\n        <div className=\"instruction-container\">\n          <h2>\n            Welcome{' '}\n            {this.props.user.name\n              ? this.props.user.name\n              : this.props.user.username}\n            !{' '}\n          </h2>\n          <ol>\n            <li>\n              <Link to=\"/challenges\">\n                <button>BROWSE</button>\n              </Link>{' '}\n              the existing challenges, or{' '}\n              <Link to=\"/challenges/create\">\n                <button>CREATE</button>\n              </Link>{' '}\n              your own. You can 'like' your favorite challenges and come back to\n              them late when you're ready to start a challenge.\n            </li>\n            <li>\n              <Link to=\"/rewards\">\n                <button>BROWSE</button>\n              </Link>{' '}\n              the existing rewards or{' '}\n              <Link to=\"/rewards/create\">\n                <button>CREATE</button>\n              </Link>{' '}\n              your own motivate you. You get rewards when reaching a certain\n              milestones. If you 'like' the ones that you favor, the reward will\n              be generated amongst them.\n            </li>\n            <li>Let the streak begin!</li>\n          </ol>\n        </div>\n      );\n\n      // users with active challenges\n    } else {\n      // this.reload()\n      // console.log('user from props', this.props.user);\n      return (\n        <>\n          <h2>\n            Welcome{' '}\n            {this.props.user.name\n              ? this.props.user.name\n              : this.props.user.username}\n            !{' '}\n          </h2>\n          <p>Your Active Challenges:</p>\n\n          <div className=\"dashboard-container\">\n            {activeChallenges.map((challenge) => {\n              return (\n                <ActiveChallengePreview\n                  challenge={challenge}\n                  user={this.props.user}\n                  calculateChallengeDay={this.calculateChallengeDay}\n                  streakStatus={this.streakStatus}\n                />\n              );\n            })}\n          </div>\n        </>\n      );\n      // builing the view for the logged in users here now\n    }\n  } else {\n    return (\n      <div>\n        Think about something you always wanted to add to your life and try it for the next 30 days.\n        30 days just about the right amount of time to add a new habit or substract a habit.\n        If you really want something badly enough, you can do ANYTHING for 30 days\n      </div>\n    )\n  }\n}\n}\n"]},"metadata":{},"sourceType":"module"}