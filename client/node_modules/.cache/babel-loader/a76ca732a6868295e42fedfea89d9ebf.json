{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _defineProperty from\"/Users/markkeeble/Ironhack/course/30-day-streak/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/markkeeble/Ironhack/course/30-day-streak/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/markkeeble/Ironhack/course/30-day-streak/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/markkeeble/Ironhack/course/30-day-streak/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/markkeeble/Ironhack/course/30-day-streak/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import axios from'axios';var Profile=/*#__PURE__*/function(_Component){_inherits(Profile,_Component);var _super=_createSuper(Profile);function Profile(){var _this;_classCallCheck(this,Profile);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={challenges:[],statusFilter:'',ownerFilter:false};_this.getData=function(){axios.get('/challenges').then(function(response){_this.setState({challenges:response.data});}).catch(function(err){return console.log(err);});};_this.filter=function(){if(_this.state.ownerFilter){return _this.state.challenges.filter(function(challenge){console.log('OWNER',challenge.owner,'USER',_this.props.user._id,'EQUAL?',challenge.owner===_this.props.user._id);return challenge.owner===_this.props.user._id;});}else{return _this.props.user.challenges.filter(function(challenge){//exclude active and favorite\nreturn challenge.status!=='active'&&challenge.status!=='favorite'&&(// filter challenge status - completed or withdrawn\n_this.state.statusFilter===challenge.status||!_this.state.statusFilter);});}};_this.handleChange=function(event){var name=event.target.name;var value=event.target.type==='checkbox'?event.target.checked:event.target.value;_this.setState(_defineProperty({},name,value));};return _this;}_createClass(Profile,[{key:\"componentDidMount\",value:function componentDidMount(){this.getData();}},{key:\"render\",value:function render(){var _this2=this;var filtered=this.filter();console.log('FILTERED',filtered);console.log('status',this.state.statusFilter);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-basic-info\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Profile\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Username:\"}),\" \",this.props.user.username]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Name:\"}),\" \",this.props.user.firstName,\" \",this.props.user.lastName]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Email:\"}),\" \",this.props.user.email]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-challenges-history\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Challenge History\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tool-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"statusFilter\",children:/*#__PURE__*/_jsxs(\"select\",{name:\"statusFilter\",id:\"statusFilter\",onChange:this.handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Show All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed\"}),/*#__PURE__*/_jsx(\"option\",{value:\"withdrawn\",children:\"Withdrawn\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"ownerFilter\",name:\"ownerFilter\",onChange:this.handleChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"ownerFilter\",children:\"Created by me\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"challenges-container\",children:filtered.map(function(challenge){if(_this2.state.ownerFilter){return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(\"p\",{children:challenge.category})}),/*#__PURE__*/_jsx(\"h3\",{children:challenge.title}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Goal:\"}),\" \",challenge.goal]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Daily Target:\"}),\" \",challenge.dailyTarget.description,\" \",challenge.dailyTarget.number,\" \",challenge.dailyTarget.unit]})]},challenge._id);}return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsx(\"p\",{children:challenge.id.category})}),/*#__PURE__*/_jsx(\"h3\",{children:challenge.id.title}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",challenge.status]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Goal:\"}),\" \",challenge.id.goal]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Daily Target:\"}),\" \",challenge.id.dailyTarget.description,\" \",challenge.id.dailyTarget.number,\" \",challenge.id.dailyTarget.unit]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Start date:\"}),\" \",challenge.startDate&&challenge.startDate]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Grand Prize:\"}),\" \",challenge.grandPrize]})]},challenge._id)// { this.props.challenge.status }, { this.props.challenge.tracker }\n// { this.props.challenge.id._id }  { this.props.challenge.id.owner }\n;})})]});}}]);return Profile;}(Component);export{Profile as default};","map":{"version":3,"sources":["/Users/markkeeble/Ironhack/course/30-day-streak/client/src/components/Profile.js"],"names":["React","Component","axios","Profile","state","challenges","statusFilter","ownerFilter","getData","get","then","response","setState","data","catch","err","console","log","filter","challenge","owner","props","user","_id","status","handleChange","event","name","target","value","type","checked","filtered","username","firstName","lastName","email","map","category","title","goal","dailyTarget","description","number","unit","id","startDate","grandPrize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Profile extends Component {\n\n  state = {\n    challenges: [],\n    statusFilter: '',\n    ownerFilter: false,\n  }\n\n  getData = () => {\n    axios.get('/challenges')\n      .then(response => {        \n        this.setState({\n          challenges: response.data\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n  filter = () => {\n\n    if (this.state.ownerFilter) {\n      return this.state.challenges.filter(challenge => {\n        console.log('OWNER', challenge.owner, 'USER', this.props.user._id, 'EQUAL?', challenge.owner === this.props.user._id)\n        return challenge.owner === this.props.user._id\n      })\n    } else {\n      return this.props.user.challenges.filter(challenge => {\n        //exclude active and favorite\n        return challenge.status !== 'active' && challenge.status !== 'favorite' &&\n        // filter challenge status - completed or withdrawn\n          (this.state.statusFilter === challenge.status || !this.state.statusFilter)        \n      })\n    }\n  }\n\n  handleChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value\n    this.setState({ [name]: value })\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const filtered = this.filter()\n    console.log('FILTERED', filtered)\n    console.log('status', this.state.statusFilter)\n\n    return (\n      <>\n        <div className=\"profile-basic-info\">\n          <h2>Profile</h2>\n          <p>\n            <b>Username:</b> {this.props.user.username}\n          </p>\n          <p>\n            <b>Name:</b> {this.props.user.firstName} {this.props.user.lastName}\n          </p>\n          <p><b>Email:</b> {this.props.user.email}</p>\n        </div>\n\n        <div className=\"profile-challenges-history\">\n          <h2>Challenge History</h2>\n\n            <div className=\"tool-box\">\n              <div className=\"statusFilter\">\n                <select name=\"statusFilter\" id=\"statusFilter\" onChange={this.handleChange}>\n                  <option value=\"\">Show All</option>\n                  <option value=\"completed\">Completed</option>\n                  <option value=\"withdrawn\">Withdrawn</option>\n                </select>\n              </div>\n  \n              <div className=\"filter\">\n                <input \n                  type=\"checkbox\" \n                  id=\"ownerFilter\" \n                  name=\"ownerFilter\" \n                  onChange={this.handleChange}\n                />\n                <label htmlFor=\"ownerFilter\">Created by me</label>\n              </div>\n            </div>\n        </div>\n\n        <div className=\"challenges-container\">\n          { \n            filtered.map(challenge => {\n              if (this.state.ownerFilter) {\n                return (\n                  <div className=\"card\" key={ challenge._id }>\n                  <div className='card-header'>\n                    <p>{ challenge.category }</p>\n                  </div>\n                  <h3>{ challenge.title }</h3>\n                  <hr/>\n                  <p><strong>Goal:</strong> { challenge.goal }</p>\n                  <p><strong>Daily Target:</strong> { challenge.dailyTarget.description } { challenge.dailyTarget.number } { challenge.dailyTarget.unit }</p>\n                </div>\n                )\n              }\n              return (\n                <div className=\"card\" key={ challenge._id }>\n                  <div className='card-header'>\n                    <p>{ challenge.id.category }</p>\n                  </div>\n                  <h3>{ challenge.id.title }</h3>\n                  <hr/>\n                  <p><strong>Status:</strong> { challenge.status }</p>\n                  <p><strong>Goal:</strong> { challenge.id.goal }</p>\n                  <p><strong>Daily Target:</strong> { challenge.id.dailyTarget.description } { challenge.id.dailyTarget.number } { challenge.id.dailyTarget.unit }</p>\n                  <p><strong>Start date:</strong> { challenge.startDate && challenge.startDate }</p>\n                  <p><strong>Grand Prize:</strong> { challenge.grandPrize }</p>\n                </div>\n                // { this.props.challenge.status }, { this.props.challenge.tracker }\n                // { this.props.challenge.id._id }  { this.props.challenge.id.owner }\n              )\n            })\n          }\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}