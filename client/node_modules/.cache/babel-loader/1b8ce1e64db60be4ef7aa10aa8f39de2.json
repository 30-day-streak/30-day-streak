{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/markkeeble/Ironhack/course/30-day-streak/client/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport './Dashboard.css';\nimport ActiveChallengePreview from './ActiveChallengePreview';\nimport DashboardHome from './DashboardHome';\nimport DashboardNoActiveChallenges from './DashboardNoActiveChallenges';\nexport default class Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.calculateChallengeDay = created_at => {\n      const startAsMilliseconds = new Date(created_at).getTime();\n      return Math.ceil(new Date() / 86400000) - Math.floor([startAsMilliseconds] / 86400000);\n    };\n\n    this.streakStatus = (arr, days) => {\n      let s = arr[0].toString();\n\n      for (let i = 1; i < days; i++) {\n        if (arr[i] !== arr[i - 1]) s += \" \";\n        s += arr[i];\n      } // calculate total days successfully completed\n\n\n      const completed = s.split('1').length - 1; //split data into streaks\n\n      let streaks = s.split(\" \");\n      streaks = streaks.filter(streak => streak[0] === \"1\"); //find longest streak\n\n      let longest = 0;\n      streaks.forEach(streak => {\n        let streakLength = streak.length;\n        if (streakLength > longest) longest = streakLength;\n      }); //compile return array\n\n      let output = {\n        currentStreak: 0,\n        longestStreak: longest,\n        daysCompleted: completed\n      };\n\n      if (arr[days - 1] === 1) {\n        output.currentStreak = streaks[streaks.length - 1].length;\n      }\n\n      return output;\n    };\n  }\n\n  render() {\n    // logged in user\n    if (this.props.user) {\n      const activeChallenges = this.props.user.challenges.filter(challenge => challenge.status === 'active');\n      const userHasActiveChallenges = this.props.user.challenges.some(challenge => challenge.status === 'active'); // users with no active challenges\n\n      if (!userHasActiveChallenges) {\n        return /*#__PURE__*/_jsxDEV(DashboardNoActiveChallenges, {\n          user: this.props.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this); // users with active challenges\n      } else {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Welcome\", ' ', this.props.user.firstName ? this.props.user.firstName : this.props.user.username, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your Active Challenges:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-container\",\n            children: activeChallenges.map(challenge => {\n              return /*#__PURE__*/_jsxDEV(ActiveChallengePreview, {\n                challenge: challenge,\n                user: this.props.user,\n                calculateChallengeDay: this.calculateChallengeDay,\n                streakStatus: this.streakStatus,\n                setUser: this.props.setUser,\n                ...this.props\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      } // guest user (not logged in)\n\n    } else {\n      return /*#__PURE__*/_jsxDEV(DashboardHome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/markkeeble/Ironhack/course/30-day-streak/client/src/components/dashboard/Dashboard.js"],"names":["React","Component","ActiveChallengePreview","DashboardHome","DashboardNoActiveChallenges","Dashboard","calculateChallengeDay","created_at","startAsMilliseconds","Date","getTime","Math","ceil","floor","streakStatus","arr","days","s","toString","i","completed","split","length","streaks","filter","streak","longest","forEach","streakLength","output","currentStreak","longestStreak","daysCompleted","render","props","user","activeChallenges","challenges","challenge","status","userHasActiveChallenges","some","firstName","username","map","setUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Dashboard.css';\nimport ActiveChallengePreview from './ActiveChallengePreview';\nimport DashboardHome from './DashboardHome';\nimport DashboardNoActiveChallenges from './DashboardNoActiveChallenges';\n\nexport default class Dashboard extends Component {\n\n  calculateChallengeDay = (created_at) => {\n    const startAsMilliseconds = new Date(created_at).getTime();\n    return Math.ceil(new Date() / 86400000) -\n      Math.floor([startAsMilliseconds] / 86400000);\n  }\n\n  streakStatus = (arr, days) => {\n    let s = arr[0].toString();\n    for (let i = 1; i < days; i++) {\n      if (arr[i] !== arr[i - 1]) s += \" \";\n      s += arr[i];\n    }\n    // calculate total days successfully completed\n    const completed = s.split('1').length - 1\n\n    //split data into streaks\n    let streaks = s.split(\" \")\n    streaks = streaks.filter(streak => streak[0] === \"1\")\n    //find longest streak\n    let longest = 0\n    streaks.forEach(streak => {\n      let streakLength = streak.length;\n      if (streakLength > longest) longest = streakLength;\n    })\n    //compile return array\n    let output = {\n      currentStreak: 0,\n      longestStreak: longest,\n      daysCompleted: completed\n    }\n    if (arr[days - 1] === 1) {\n      output.currentStreak = streaks[streaks.length - 1].length\n    }\n    return output\n  }\n\n  render() {\n\n// logged in user\n    if (this.props.user) {\n      const activeChallenges = this.props.user.challenges.filter(challenge => challenge.status === 'active')\n      const userHasActiveChallenges = this.props.user.challenges.some(\n        (challenge) => challenge.status === 'active'\n      );\n\n// users with no active challenges\n      if (!userHasActiveChallenges) {\n        return (\n          <DashboardNoActiveChallenges user={ this.props.user } />\n        );\n      \n// users with active challenges\n      } else {\n        return (\n          <>\n            <h2>Welcome{' '}\n              {this.props.user.firstName\n                ? this.props.user.firstName\n                : this.props.user.username}!\n            </h2>\n            <p>Your Active Challenges:</p>\n\n            <div className=\"dashboard-container\">\n              { activeChallenges.map((challenge) => {\n                  return (\n                    <ActiveChallengePreview\n                      challenge={challenge}\n                      user={this.props.user}\n                      calculateChallengeDay={this.calculateChallengeDay}\n                      streakStatus={this.streakStatus}\n                      setUser={this.props.setUser}\n                      {...this.props}\n                    />\n                  );\n                })\n              }\n            </div>\n\n          </>\n        );\n      }\n\n// guest user (not logged in)\n    } else {\n      return (\n\n        <DashboardHome />\n\n      )\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}