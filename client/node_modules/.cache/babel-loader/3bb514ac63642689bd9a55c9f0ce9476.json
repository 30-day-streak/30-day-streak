{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import _objectSpread from\"/Users/markkeeble/Ironhack/course/30-day-streak/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"/Users/markkeeble/Ironhack/course/30-day-streak/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/markkeeble/Ironhack/course/30-day-streak/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/markkeeble/Ironhack/course/30-day-streak/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/markkeeble/Ironhack/course/30-day-streak/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./Dashboard.css';import ActiveChallengePreview from'./ActiveChallengePreview';import DashboardHome from'./DashboardHome';import DashboardNoActiveChallenges from'./DashboardNoActiveChallenges';var Dashboard=/*#__PURE__*/function(_Component){_inherits(Dashboard,_Component);var _super=_createSuper(Dashboard);function Dashboard(){var _this;_classCallCheck(this,Dashboard);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.calculateChallengeDay=function(created_at){var startAsMilliseconds=new Date(created_at).getTime();return Math.ceil(new Date()/86400000)-Math.floor([startAsMilliseconds]/86400000);};_this.streakStatus=function(arr,days){var s=arr[0].toString();for(var i=1;i<days;i++){if(arr[i]!==arr[i-1])s+=\" \";s+=arr[i];}// calculate total days successfully completed\nvar completed=s.split('1').length-1;//split data into streaks\nvar streaks=s.split(\" \");streaks=streaks.filter(function(streak){return streak[0]===\"1\";});//find longest streak\nvar longest=0;streaks.forEach(function(streak){var streakLength=streak.length;if(streakLength>longest)longest=streakLength;});//compile return array\nvar output={currentStreak:0,longestStreak:longest,daysCompleted:completed};if(arr[days-1]===1){output.currentStreak=streaks[streaks.length-1].length;}return output;};return _this;}_createClass(Dashboard,[{key:\"render\",value:function render(){var _this2=this;// logged in user\nif(this.props.user){var activeChallenges=this.props.user.challenges.filter(function(challenge){return challenge.status==='active';});var userHasActiveChallenges=this.props.user.challenges.some(function(challenge){return challenge.status==='active';});// users with no active challenges\nif(!userHasActiveChallenges){return/*#__PURE__*/_jsx(DashboardNoActiveChallenges,{user:this.props.user});// users with active challenges\n}else{return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Welcome\",' ',this.props.user.firstName?this.props.user.firstName:this.props.user.username,\"!\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Your Active Challenges:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-container\",children:activeChallenges.map(function(challenge){return/*#__PURE__*/_jsx(ActiveChallengePreview,_objectSpread({challenge:challenge,user:_this2.props.user,calculateChallengeDay:_this2.calculateChallengeDay,streakStatus:_this2.streakStatus,setUser:_this2.props.setUser},_this2.props));})})]});}// guest user (not logged in)\n}else{return/*#__PURE__*/_jsx(DashboardHome,{});}}}]);return Dashboard;}(Component);export{Dashboard as default};","map":{"version":3,"sources":["/Users/markkeeble/Ironhack/course/30-day-streak/client/src/components/dashboard/Dashboard.js"],"names":["React","Component","ActiveChallengePreview","DashboardHome","DashboardNoActiveChallenges","Dashboard","calculateChallengeDay","created_at","startAsMilliseconds","Date","getTime","Math","ceil","floor","streakStatus","arr","days","s","toString","i","completed","split","length","streaks","filter","streak","longest","forEach","streakLength","output","currentStreak","longestStreak","daysCompleted","props","user","activeChallenges","challenges","challenge","status","userHasActiveChallenges","some","firstName","username","map","setUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Dashboard.css';\nimport ActiveChallengePreview from './ActiveChallengePreview';\nimport DashboardHome from './DashboardHome';\nimport DashboardNoActiveChallenges from './DashboardNoActiveChallenges';\n\nexport default class Dashboard extends Component {\n\n  calculateChallengeDay = (created_at) => {\n    const startAsMilliseconds = new Date(created_at).getTime();\n    return Math.ceil(new Date() / 86400000) -\n      Math.floor([startAsMilliseconds] / 86400000);\n  }\n\n  streakStatus = (arr, days) => {\n    let s = arr[0].toString();\n    for (let i = 1; i < days; i++) {\n      if (arr[i] !== arr[i - 1]) s += \" \";\n      s += arr[i];\n    }\n    // calculate total days successfully completed\n    const completed = s.split('1').length - 1\n\n    //split data into streaks\n    let streaks = s.split(\" \")\n    streaks = streaks.filter(streak => streak[0] === \"1\")\n    //find longest streak\n    let longest = 0\n    streaks.forEach(streak => {\n      let streakLength = streak.length;\n      if (streakLength > longest) longest = streakLength;\n    })\n    //compile return array\n    let output = {\n      currentStreak: 0,\n      longestStreak: longest,\n      daysCompleted: completed\n    }\n    if (arr[days - 1] === 1) {\n      output.currentStreak = streaks[streaks.length - 1].length\n    }\n    return output\n  }\n\n  render() {\n\n// logged in user\n    if (this.props.user) {\n      const activeChallenges = this.props.user.challenges.filter(challenge => challenge.status === 'active')\n      const userHasActiveChallenges = this.props.user.challenges.some(\n        (challenge) => challenge.status === 'active'\n      );\n\n// users with no active challenges\n      if (!userHasActiveChallenges) {\n        return (\n          <DashboardNoActiveChallenges user={ this.props.user } />\n        );\n      \n// users with active challenges\n      } else {\n        return (\n          <>\n            <h2>Welcome{' '}\n              {this.props.user.firstName\n                ? this.props.user.firstName\n                : this.props.user.username}!\n            </h2>\n            <p>Your Active Challenges:</p>\n\n            <div className=\"dashboard-container\">\n              { activeChallenges.map((challenge) => {\n                  return (\n                    <ActiveChallengePreview\n                      challenge={challenge}\n                      user={this.props.user}\n                      calculateChallengeDay={this.calculateChallengeDay}\n                      streakStatus={this.streakStatus}\n                      setUser={this.props.setUser}\n                      {...this.props}\n                    />\n                  );\n                })\n              }\n            </div>\n\n          </>\n        );\n      }\n\n// guest user (not logged in)\n    } else {\n      return (\n\n        <DashboardHome />\n\n      )\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}